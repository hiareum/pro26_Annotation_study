<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd">


  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/views/test/" />
    <!--   <property name="prefix" value="/WEB-INF/views/member/" /> -->
      <property name="suffix" value=".jsp"/>
   </bean>

<!-- @RequestMapping과 같은 애노테이션을 이용하여 컨트롤러 클래스나 메소드를 매핑할 수 있도록 지원하며, 
이를 통해 컨트롤러와 요청(request)을 연결시켜주는 역할을 합니다. -->
   <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
   <!-- 컨트롤러 메소드에 @RequestParam, @PathVariable, @RequestBody와 같은 애노테이션을 지정하여 요청(request)을 처리하고,
    요청과 응답(response)의 파라미터를 자동으로 매핑합니다.  -->
  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
  <!--  context:component-scan은 스프링 컨테이너(ApplicationContext)가 자동으로 클래스패스를 스캔하여, 지정한 패키지 이하에 있는 모든 컴포넌트를 자동으로 스캔합니다.
  com.spring으로 시작하는건 다 인식-->
   <context:component-scan base-package="com.spring"/>

</beans>